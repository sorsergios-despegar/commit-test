#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

PROYECT=`cat hooks/proyect.txt`

TICKET=`grep "$PROYECT-[1-9][0-9]*" $1`
MSG=`grep "$PROYECT-[1-9][0-9]* " $1 | sed -s "#\($PROYECT-[1-9][0-9]*\) \(.*\)#\2#g"`


if [ -z "$TICKET" ]; then
	echo "MENSAJE INCORRECTO:"
	echo "    Se debe agregar el numero de un ticket de Jira, p.e: $PROYECT-123"
	echo "    Volver a escribir el mensaje de commit."
	exit 1
else 
	if [ -z "$MSG" ]; then
	        echo "MENSAJE VACIO:"
	        echo "    Se debe agregar un mensaje desciptivo"
	        echo "    Volver a escribir el mensaje de commit."
	        exit 1
	fi
	exit 0
fi

